@page "/contacts"
@using Netrunner.Shared.Users
@using Netrunner.Client.Services
@using Netrunner.Shared.Services
@inject IServiceHelper _serviceHelper

<h3>Users</h3>
@if (_contacts == null)
{
    <Loading/>
}
else
{
    <ul>
        @foreach (var user in _contacts)
        {
            <li>
                <User Name="@user.Username" OnUpdate="Refresh"></User>
            </li>
        }
    </ul>
    <form @onsubmit="HandleAddContact">
        <div class="form-group">
            <label>
                Name:
                <input @bind="_newContactInput" size="50"/>
            </label>
        </div>
        <button>Add Contact</button>
    </form>
}

@code {
#nullable enable

    private IEnumerable<Contact>? _contacts;
    private string? _newContactInput;

    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }

    private async Task HandleAddContact()
    {
        var contactService = await _serviceHelper.GetService<IContactService>();
        await contactService.AddContact(new Contact
        {
            Username = _newContactInput
        });
        _newContactInput = null;

        await Refresh();
    }

    private async Task Refresh()
    {
        var contactService = await _serviceHelper.GetService<IContactService>();
        _contacts = await contactService.GetContacts();
    }

}
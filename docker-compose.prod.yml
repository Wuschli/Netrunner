version: '3.4'

services:

  #netrunner.client:
  #  labels:
  #    - "traefik.enable=true"
  #    - "traefik.http.routers.client.rule=Host(`app.${NETRUNNER_BASE_URL}`)"
  #    - "traefik.http.services.client.loadbalancer.server.port=80"
  #    - "traefik.http.routers.client.tls.certresolver=letsencrypt"
  #    - "traefik.http.middlewares.noCacheHeader.headers.customrequestheaders.Cache-Control=no-cache"
  #    - "traefik.http.middlewares.noCacheHeader.headers.customrequestheaders.Pragma=no-cache"
  #    - "traefik.http.routers.client.middlewares=noCacheHeader@docker"
  #  ports: 
  #    - 8081:80
  #  networks:
  #    - traefik

  #netrunner.challenges:
  #  labels:
  #    - "traefik.enable=true"
  #    - "traefik.http.routers.challenges.rule=Host(`challenges.${NETRUNNER_BASE_URL}`)"
  #    - "traefik.http.services.challenges.loadbalancer.server.port=80"
  #    - "traefik.http.routers.challenges.tls.certresolver=letsencrypt"
  #  ports: 
  #    - 8082:80
  #  networks:
  #    - traefik

  netrunner.server_legacy:
    networks:
      - traefik

  netrunner.auth:
    networks:
      - traefik

  crossbar:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.crossbar.rule=Host(`wamp.${NETRUNNER_BASE_URL}`)"
      - "traefik.http.services.crossbar.loadbalancer.server.port=8080"
      - "traefik.http.routers.crossbar.tls.certresolver=letsencrypt"
    command: "--loglevel debug"
    networks:
      - traefik

  mongo:
    volumes:
      - /netrunner/mongodb_data:/data/db
    networks:
      - traefik

  openldap:
    volumes:
      - '/netrunner/openldap_data:/bitnami/openldap'
    networks:
      - traefik
      
networks:
  traefik:
    external:
      name: traefik_webgateway